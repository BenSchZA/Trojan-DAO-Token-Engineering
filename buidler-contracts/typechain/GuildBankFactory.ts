/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { GuildBank } from "./GuildBank";

export class GuildBankFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }
  deploy(approvedTokenAddress: string): Promise<GuildBank> {
    return super.deploy(approvedTokenAddress) as Promise<GuildBank>;
  }
  getDeployTransaction(approvedTokenAddress: string): UnsignedTransaction {
    return super.getDeployTransaction(approvedTokenAddress);
  }
  attach(address: string): GuildBank {
    return super.attach(address) as GuildBank;
  }
  connect(signer: Signer): GuildBankFactory {
    return super.connect(signer) as GuildBankFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GuildBank {
    return new Contract(address, _abi, signerOrProvider) as GuildBank;
  }
}

const _abi = [
  {
    constant: false,
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "totalShares",
        type: "uint256"
      }
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "approvedToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approvedTokenAddress",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "Withdrawal",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516105ec3803806105ec8339818101604052602081101561003357600080fd5b5051600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600180546001600160a01b0319166001600160a01b039290921691909117905561053f806100ad6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638da5cb5b146100715780638f32d59b14610095578063b5c5f672146100b1578063bab46259146100e3578063f2fde38b146100eb575b600080fd5b61006f610111565b005b61007961016c565b604080516001600160a01b039092168252519081900360200190f35b61009d61017b565b604080519115158252519081900360200190f35b61009d600480360360608110156100c757600080fd5b506001600160a01b03813516906020810135906040013561018c565b610079610309565b61006f6004803603602081101561010157600080fd5b50356001600160a01b0316610318565b61011961017b565b61012257600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b600061019661017b565b61019f57600080fd5b600154604080516370a0823160e01b8152306004820152905160009261023d9286926102319289926001600160a01b03909116916370a0823191602480820192602092909190829003018186803b1580156101f957600080fd5b505afa15801561020d573d6000803e3d6000fd5b505050506040513d602081101561022357600080fd5b50519063ffffffff61033516565b9063ffffffff61039716565b6040805182815290519192506001600160a01b038716917f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659181900360200190a26001546040805163a9059cbb60e01b81526001600160a01b038881166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156102d457600080fd5b505af11580156102e8573d6000803e3d6000fd5b505050506040513d60208110156102fe57600080fd5b505195945050505050565b6001546001600160a01b031681565b61032061017b565b61032957600080fd5b610332816103d9565b50565b60008261034457506000610391565b8282028284828161035157fe5b041461038e5760405162461bcd60e51b81526004018080602001828103825260218152602001806104ea6021913960400191505060405180910390fd5b90505b92915050565b600061038e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610447565b6001600160a01b0381166103ec57600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600081836104d35760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610498578181015183820152602001610480565b50505050905090810190601f1680156104c55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816104df57fe5b049594505050505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a265627a7a723158204cd524089c459666f1894358fecc825e04d3d7fcd12f51b6aa493bf58ae49c1264736f6c634300050b0032";
