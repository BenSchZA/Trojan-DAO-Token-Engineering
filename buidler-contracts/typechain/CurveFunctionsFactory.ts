/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { CurveFunctions } from "./CurveFunctions";

export class CurveFunctionsFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }
  deploy(): Promise<CurveFunctions> {
    return super.deploy() as Promise<CurveFunctions>;
  }
  getDeployTransaction(): UnsignedTransaction {
    return super.getDeployTransaction();
  }
  attach(address: string): CurveFunctions {
    return super.attach(address) as CurveFunctions;
  }
  connect(signer: Signer): CurveFunctionsFactory {
    return super.connect(signer) as CurveFunctionsFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurveFunctions {
    return new Contract(address, _abi, signerOrProvider) as CurveFunctions;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256"
      }
    ],
    name: "curveIntegral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256"
      }
    ],
    name: "sqrt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "curveFunction",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256"
      }
    ],
    name: "inverseCurveIntegral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105f3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632e0f26251461005c5780633fd2300d14610076578063677342ce146100935780639e416bc7146100b0578063d0ef837a1461012d575b600080fd5b61006461014a565b60408051918252519081900360200190f35b6100646004803603602081101561008c57600080fd5b503561014f565b610064600480360360208110156100a957600080fd5b5035610244565b6100b861029a565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f25781810151838201526020016100da565b50505050905090810190601f16801561011f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100646004803603602081101561014357600080fd5b50356102d3565b601281565b6000710125dfa371a19e6f7cb54395ca000000000082106101b7576040805162461bcd60e51b815260206004820152601860248201527f496e70757420617267756d656e7420746f6f206c617267650000000000000000604482015290519081900360640190fd5b60006101dd6101cd60128063ffffffff61036116565b8490600a0a63ffffffff6103ac16565b90506516bcc41e90006706f05b59d3b20000610239670de0b6b3a76400006102158561022d8561022185858a8663ffffffff6103ac16565b9063ffffffff61040516565b9063ffffffff61044716565b9063ffffffff6103ac16565b93505050505b919050565b6000816102535750600061023f565b600382116102635750600161023f565b60026001830104825b8082101561029357508060028180868161028257fe5b04018161028b57fe5b04915061026c565b9392505050565b6040518060400160405280601981526020017f6c696e6561723a2028312f3230303030292a78202b20302e350000000000000081525081565b60006024670de0b6b3a764000083026f96769950b50d88f4131444800000000060006103326103106ec097ce7bc90715b34b9f1000000000610244565b61021561032587600a0a6109c4028701610244565b859063ffffffff6103ac16565b905061035761270f19600a86900a028201670de0b6b3a764000063ffffffff61040516565b9695505050505050565b60006103a383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506104a1565b90505b92915050565b6000826103bb575060006103a6565b828202828482816103c857fe5b04146103a35760405162461bcd60e51b815260040180806020018281038252602181526020018061059e6021913960400191505060405180910390fd5b60006103a383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610538565b6000828201838110156103a3576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600081848411156105305760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156104f55781810151838201526020016104dd565b50505050905090810190601f1680156105225780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600081836105875760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156104f55781810151838201526020016104dd565b50600083858161059357fe5b049594505050505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a265627a7a723158207ae5e1eb0199e0cdb84e16f35139d0efe4ef666f9f5f74dd15f3d76fa809f5c564736f6c634300050b0032";
